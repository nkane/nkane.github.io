I"¬<p>After doing a bit of research on some of the details regarding JavaScript objects, I figured I would write a post about it. JavaScript has a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">‚Äúnew operator‚Äù</a>, and the functionality of this operation is the create an instance of a user-defined object type or one of the built-in object types that has a constructor function (more on that shortly).</p>

<h3 id="object-literal-or-initializer-notation">Object Literal or Initializer Notation</h3>
<p>Object literals allow for quick creation of objects with declared properties inside. When creating an Object this way, it does not create an Object wrapper around it. Instead, it just creates a small Object without any unnecessary functionality behind it. We will discuss what exactly Object wrappers. Below is an example of how to instantiate an Object Literal:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">firstName</span><span class="p">:</span> <span class="s1">'Greg'</span><span class="p">,</span>
    <span class="na">lastName</span><span class="p">:</span> <span class="s1">'McGregor'</span>
<span class="p">};</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="kd">constructor</span><span class="p">);</span>

  <span class="nl">Output</span><span class="p">:</span>
    <span class="nb">Object</span> <span class="p">{</span>
      <span class="nl">firstName</span><span class="p">:</span> <span class="s2">"Greg"</span><span class="p">,</span>
      <span class="nx">lastName</span><span class="p">:</span> <span class="s2">"McGregor"</span>
    <span class="p">}</span>

    <span class="kd">function</span> <span class="nb">Object</span><span class="p">()</span> <span class="p">{</span> <span class="p">[</span><span class="kr">native</span> <span class="nx">code</span><span class="p">]</span> <span class="p">}</span></code></pre></figure>

<h3 id="constructor-function">Constructor Function</h3>
<p>Constructor Functions are skeletons for new objects in JavaScript. They pair up with the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">‚Äúnew operator‚Äù</a> in order to create new instances of objects; however, they have some key difference from creating an object using the initializer notation. When using the new key word, a prototype object is attached to the object instance. Below is an example of how to instantiate an Object using the new key word.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">function</span> <span class="nx">PersonConstructor</span><span class="p">(</span><span class="nx">first</span><span class="p">,</span> <span class="nx">last</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">first</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">last</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">anotherPerson</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PersonConstructor</span><span class="p">(</span><span class="s1">'Greg'</span><span class="p">,</span> <span class="s1">'McGregor'</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">anotherPerson</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">anotherPerson</span><span class="p">.</span><span class="kd">constructor</span><span class="p">);</span>

  <span class="nl">Output</span><span class="p">:</span>
    <span class="nx">PersonConstructor</span> <span class="p">{</span>
      <span class="nl">firstName</span><span class="p">:</span> <span class="s2">"Greg"</span><span class="p">,</span>
      <span class="nx">lastName</span><span class="p">:</span> <span class="s2">"Gregory"</span>
    <span class="p">}</span>

    <span class="kd">function</span> <span class="nx">PersonConstructor</span><span class="p">(</span><span class="nx">first</span><span class="p">,</span> <span class="nx">last</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">first</span><span class="p">;</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">last</span><span class="p">;</span>
    <span class="p">}</span></code></pre></figure>

<p>If you find anything inaccurate in my post, please send me a message. Any feedback is much appreciated!</p>

<p>Other references:</p>

<p><a href="http://yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/">YUI - Team Blog</a></p>

:ET