# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Detect runner type
        id: runner-type
        run: |
          if [ -f "/etc/github/runner-image-version" ]; then
            echo "runner-type=github-hosted" >> $GITHUB_OUTPUT
          else
            echo "runner-type=self-hosted" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup Ruby (GitHub-hosted)
        if: steps.runner-type.outputs.runner-type == 'github-hosted'
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0
      
      - name: Setup Ruby (Self-hosted)
        if: steps.runner-type.outputs.runner-type == 'self-hosted'
        run: |
          # Check if Ruby is already installed with correct version
          if ! ruby --version | grep -q "3.1"; then
            # Install dependencies
            sudo apt-get update
            sudo apt-get install -y build-essential zlib1g-dev libssl-dev libreadline-dev libyaml-dev libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev
            
            # Install rbenv
            if [ ! -d "$HOME/.rbenv" ]; then
              git clone https://github.com/rbenv/rbenv.git ~/.rbenv
              git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
            fi
            
            # Add rbenv to PATH
            export PATH="$HOME/.rbenv/bin:$PATH"
            eval "$(rbenv init -)"
            
            # Install Ruby 3.1.4
            rbenv install -s 3.1.4
            rbenv global 3.1.4
            
            # Install bundler
            gem install bundler
          fi
          
          # Install dependencies
          bundle install
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
